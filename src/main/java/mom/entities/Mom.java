package mom.entities;

// Generated 16 May, 2016 12:35:57 PM by Hibernate Tools 4.3.1

import static javax.persistence.GenerationType.IDENTITY;

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Version;

/**
 * Mom generated by hbm2java
 */
@Entity
@Table(name = "mom", catalog = "mom")
public class Mom implements java.io.Serializable {

	private Long momId;
	private Integer version;
	private MeetingRooms meetingRooms;
	private Projects projects;
	private Users users;
	private String momDesc;
	private Date meetingDate;
	private Date startTime;
	private Date endTime;
	private String meetingRoom;
	private Date updDate;
	private String projectName;
	private Set<MomDiscussions> momDiscussionses = new HashSet<MomDiscussions>(0);
	private Set<MomParticipants> momParticipantses = new HashSet<MomParticipants>(0);
	private Set<MomRecipients> momRecipientses = new HashSet<MomRecipients>(0);
	private Set<MomActions> momActionses = new HashSet<MomActions>(0);
	private Integer mailSent;

	public Mom() {
	}

	public Mom(MeetingRooms meetingRooms, Projects projects, Users users,
			String momDesc, Date meetingDate, Date startTime, Date endTime,
			Date updDate, String projectName) {
		this.meetingRooms = meetingRooms;
		this.projects = projects;
		this.users = users;
		this.momDesc = momDesc;
		this.meetingDate = meetingDate;
		this.startTime = startTime;
		this.endTime = endTime;
		this.updDate = updDate;
		this.projectName = projectName;
	}

	public Mom(MeetingRooms meetingRooms, Projects projects, Users users,
			String momDesc, Date meetingDate, Date startTime, Date endTime,
			String meetingRoom, Date updDate, String projectName,
			Set momDiscussionses, Set momParticipantses, Set momRecipientses,
			Set momActionses) {
		this.meetingRooms = meetingRooms;
		this.projects = projects;
		this.users = users;
		this.momDesc = momDesc;
		this.meetingDate = meetingDate;
		this.startTime = startTime;
		this.endTime = endTime;
		this.meetingRoom = meetingRoom;
		this.updDate = updDate;
		this.projectName = projectName;
		this.momDiscussionses = momDiscussionses;
		this.momParticipantses = momParticipantses;
		this.momRecipientses = momRecipientses;
		this.momActionses = momActionses;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "mom_id", unique = true, nullable = false)
	public Long getMomId() {
		return this.momId;
	}

	public void setMomId(Long momId) {
		this.momId = momId;
	}

	@Version
	@Column(name = "version")
	public Integer getVersion() {
		return this.version;
	}

	public void setVersion(Integer version) {
		this.version = version;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "meeting_room_id")
	public MeetingRooms getMeetingRooms() {
		return this.meetingRooms;
	}

	public void setMeetingRooms(MeetingRooms meetingRooms) {
		this.meetingRooms = meetingRooms;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "project_id")
	public Projects getProjects() {
		return this.projects;
	}

	public void setProjects(Projects projects) {
		this.projects = projects;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "organizer", nullable = false)
	public Users getUsers() {
		return this.users;
	}

	public void setUsers(Users users) {
		this.users = users;
	}

	@Column(name = "mom_desc", nullable = false, length = 128)
	public String getMomDesc() {
		return this.momDesc;
	}

	public void setMomDesc(String momDesc) {
		this.momDesc = momDesc;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "meeting_date", nullable = false, length = 10)
	public Date getMeetingDate() {
		return this.meetingDate;
	}

	public void setMeetingDate(Date meetingDate) {
		this.meetingDate = meetingDate;
	}

	@Temporal(TemporalType.TIME)
	@Column(name = "start_time", nullable = false, length = 8)
	public Date getStartTime() {
		return this.startTime;
	}

	public void setStartTime(Date startTime) {
		this.startTime = startTime;
	}

	@Temporal(TemporalType.TIME)
	@Column(name = "end_time", nullable = false, length = 8)
	public Date getEndTime() {
		return this.endTime;
	}

	public void setEndTime(Date endTime) {
		this.endTime = endTime;
	}

	@Column(name = "meeting_room", length = 128)
	public String getMeetingRoom() {
		return this.meetingRoom;
	}

	public void setMeetingRoom(String meetingRoom) {
		this.meetingRoom = meetingRoom;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "upd_date", nullable = false, length = 19)
	public Date getUpdDate() {
		return this.updDate;
	}

	public void setUpdDate(Date updDate) {
		this.updDate = updDate;
	}

	@Column(name = "project_name", length = 64)
	public String getProjectName() {
		return this.projectName;
	}

	public void setProjectName(String projectName) {
		this.projectName = projectName;
	}

	@OneToMany(fetch = FetchType.EAGER, mappedBy = "mom", cascade = {javax.persistence.CascadeType.PERSIST,javax.persistence.CascadeType.MERGE})
	public Set<MomDiscussions> getMomDiscussionses() {
		return this.momDiscussionses;
	}

	public void setMomDiscussionses(Set<MomDiscussions> momDiscussionses) {
		this.momDiscussionses = momDiscussionses;
	}

	@OneToMany(fetch = FetchType.EAGER, mappedBy = "mom", cascade = {javax.persistence.CascadeType.PERSIST,javax.persistence.CascadeType.MERGE})
	public Set<MomParticipants> getMomParticipantses() {
		return this.momParticipantses;
	}

	public void setMomParticipantses(Set<MomParticipants> momParticipantses) {
		this.momParticipantses = momParticipantses;
	}

	@OneToMany(fetch = FetchType.EAGER, mappedBy = "mom", cascade = {javax.persistence.CascadeType.PERSIST,javax.persistence.CascadeType.MERGE})
	public Set<MomRecipients> getMomRecipientses() {
		return this.momRecipientses;
	}

	public void setMomRecipientses(Set<MomRecipients> momRecipientses) {
		this.momRecipientses = momRecipientses;
	}

	@OneToMany(fetch = FetchType.EAGER, mappedBy = "mom", cascade = {javax.persistence.CascadeType.PERSIST,javax.persistence.CascadeType.MERGE})
	public Set<MomActions> getMomActionses() {
		return this.momActionses;
	}

	public void setMomActionses(Set<MomActions> momActionses) {
		this.momActionses = momActionses;
	}

	public Integer getMailSent() {
		return mailSent;
	}

	public void setMailSent(Integer mailSent) {
		this.mailSent = mailSent;
	}
	

}

package mom.entities;

// Generated 16 May, 2016 12:35:57 PM by Hibernate Tools 4.3.1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Version;

/**
 * MomActions generated by hbm2java
 */
@Entity
@Table(name = "mom_actions", catalog = "mom")
public class MomActions implements java.io.Serializable {

	private MomActionsId id;
	private Integer version;
	private Mom mom;
	private String actionDesc;
	private Date targetDate;
	private Date revisedTargetDate;
	private Date actualEndDate;
	private String statusCode;
	private String remarks;
	private Date updDate;
	private Set<MomActionOwner> momActionOwners = new HashSet<MomActionOwner>(0);

	public MomActions() {
	}

	public MomActions(MomActionsId id, Mom mom, String actionDesc,
			Date targetDate, Date revisedTargetDate, Date actualEndDate,
			String statusCode, String remarks, Date updDate) {
		this.id = id;
		this.mom = mom;
		this.actionDesc = actionDesc;
		this.targetDate = targetDate;
		this.revisedTargetDate = revisedTargetDate;
		this.actualEndDate = actualEndDate;
		this.statusCode = statusCode;
		this.remarks = remarks;
		this.updDate = updDate;
	}

	public MomActions(MomActionsId id, Mom mom, String actionDesc,
			Date targetDate, Date revisedTargetDate, Date actualEndDate,
			String statusCode, String remarks, Date updDate, Set momActionOwners) {
		this.id = id;
		this.mom = mom;
		this.actionDesc = actionDesc;
		this.targetDate = targetDate;
		this.revisedTargetDate = revisedTargetDate;
		this.actualEndDate = actualEndDate;
		this.statusCode = statusCode;
		this.remarks = remarks;
		this.updDate = updDate;
		this.momActionOwners = momActionOwners;
	}

	@EmbeddedId
	@AttributeOverrides({
			@AttributeOverride(name = "momId", column = @Column(name = "mom_id", nullable = false)),
			@AttributeOverride(name = "actionId", column = @Column(name = "action_id", nullable = false)) })
	public MomActionsId getId() {
		return this.id;
	}

	public void setId(MomActionsId id) {
		this.id = id;
	}

	@Version
	@Column(name = "version")
	public Integer getVersion() {
		return this.version;
	}

	public void setVersion(Integer version) {
		this.version = version;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "mom_id", nullable = false, insertable = false, updatable = false)
	public Mom getMom() {
		return this.mom;
	}

	public void setMom(Mom mom) {
		this.mom = mom;
	}

	@Column(name = "action_desc", nullable = false, length = 128)
	public String getActionDesc() {
		return this.actionDesc;
	}

	public void setActionDesc(String actionDesc) {
		this.actionDesc = actionDesc;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "target_date", nullable = false, length = 10)
	public Date getTargetDate() {
		return this.targetDate;
	}

	public void setTargetDate(Date targetDate) {
		this.targetDate = targetDate;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "revised_target_date", length = 10)
	public Date getRevisedTargetDate() {
		return this.revisedTargetDate;
	}

	public void setRevisedTargetDate(Date revisedTargetDate) {
		this.revisedTargetDate = revisedTargetDate;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "actual_end_date", length = 10)
	public Date getActualEndDate() {
		return this.actualEndDate;
	}

	public void setActualEndDate(Date actualEndDate) {
		this.actualEndDate = actualEndDate;
	}

	@Column(name = "status_code", nullable = false, length = 1)
	public String getStatusCode() {
		return this.statusCode;
	}

	public void setStatusCode(String statusCode) {
		this.statusCode = statusCode;
	}

	@Column(name = "remarks",length = 128)
	public String getRemarks() {
		return this.remarks;
	}

	public void setRemarks(String remarks) {
		this.remarks = remarks;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "upd_date", nullable = false, length = 19)
	public Date getUpdDate() {
		return this.updDate;
	}

	public void setUpdDate(Date updDate) {
		this.updDate = updDate;
	}

	@OneToMany(fetch = FetchType.EAGER, mappedBy = "momActions", cascade = {javax.persistence.CascadeType.PERSIST,javax.persistence.CascadeType.MERGE})
	public Set<MomActionOwner> getMomActionOwners() {
		return this.momActionOwners;
	}

	public void setMomActionOwners(Set<MomActionOwner> momActionOwners) {
		this.momActionOwners = momActionOwners;
	}

}
